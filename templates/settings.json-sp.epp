  /* Users for basic authentication. is_admin = true gives access to /admin.
     If you do not uncomment this, /admin will not be available! */
  <%- if $etherpad::users { -%>
  "users": {
    <%- $etherpad::users.each |String $username, Hash $attrs| { -%>
    "<%= $username -%>": {
      "password": "<%= $attrs['password'] -%>",
      "is_admin": "<%= $attrs['is_admin'] -%>"
    },
    <%- } -%>
  },
  <%- } else { -%>
  /*
  "users": {
    "admin": {
      "password": "changeme1",
      "is_admin": true
    },
    "user": {
      "password": "changeme1",
      "is_admin": false
    }
  },
  */
<%- } -%>

// restrict socket.io transport methods
"socketTransportProtocols" : ["xhr-polling", "jsonp-polling", "htmlfile"],

// Allow Load Testing tools to hit the Etherpad Instance.  Warning this will disable security on the instance.
"loadTest": false,

// Disable indentation on new line when previous line ends with some special chars (':', '[', '(', '{')
/*
"indentationOnNewLine": false,
*/

/* The toolbar buttons configuration.
"toolbar": {
  "left": [
    ["bold", "italic", "underline", "strikethrough"],
    ["orderedlist", "unorderedlist", "indent", "outdent"],
    ["undo", "redo"],
    ["clearauthorship"]
  ],
  "right": [
    ["importexport", "timeslider", "savedrevision"],
    ["settings", "embed"],
    ["showusers"]
  ],
  "timeslider": [
    ["timeslider_export", "timeslider_returnToPad"]
  ]
},
*/

/* The log level we are using, can be: DEBUG, INFO, WARN, ERROR */
"loglevel": "INFO",

//Logging configuration. See log4js documentation for further information
// https://github.com/nomiddlename/log4js-node
// You can add as many appenders as you want here:
"logconfig" :
  { "appenders": [
      { "type": "console"
      //, "category": "access"// only logs pad access
      }
      <%- if $etherpad::logconfig_file { -%>
    , { "type": "file"
      , "filename": "<%= $etherpad::logconfig_file_filename %>"
      , "maxLogSize": <%= $etherpad::logconfig_file_max_log_size %>
      , "backups": <%= $etherpad::logconfig_file_backups %> // how many log files there're gonna be at max
          <%- if $etherpad::logconfig_file_category { -%>
      , "category": "<%= $etherpad::logconfig_file_category %>" // only log a specific category
          <%- } else { -%>
      //, "category": "test" // only log a specific category
        <%- } -%>
      }
      <%- } else { -%>
  /*
    , { "type": "file"
      , "filename": "your-log-file-here.log"
      , "maxLogSize": 1024
      , "backups": 3 // how many log files there're gonna be at max
      //, "category": "test" // only log a specific category
      }*/
      <%- } -%>
  /*
    , { "type": "logLevelFilter"
      , "level": "warn" // filters out all log messages that have a lower level than "error"
      , "appender":
        {  Use whatever appender you want here  }
      }*/
  /*
    , { "type": "logLevelFilter"
      , "level": "error" // filters out all log messages that have a lower level than "error"
      , "appender":
        { "type": "smtp"
        , "subject": "An error occured in your EPL instance!"
        , "recipients": "bar@blurdybloop.com, baz@blurdybloop.com"
        , "sendInterval": 60*5 // in secs -- will buffer log messages; set to 0 to send a mail for every message
        , "transport": "SMTP", "SMTP": { // see https://github.com/andris9/Nodemailer#possible-transport-methods
            "host": "smtp.example.com", "port": 465,
            "secureConnection": true,
            "auth": {
                "user": "foo@example.com",
                "pass": "bar_foo"
            }
          }
        }
      }*/
    ]
  }
}
